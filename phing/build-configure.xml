<project name="ads" basedir=".">

  <!--
  ## Initialize build
  -->
  <target name="build-configure-init">
      <property name="project.drush.args"         value="--verbose --yes"/>
      <property name="project.drush.cmd"          value="drush ${project.drush.args}"/>
      <property name="project.dir.src"            value="${phing.dir}/../src"/>
  </target>

  <!--
  ## Set up standard feature site
  -->
  <target name="run-ads-configure" depends="build-configure-init">

    <echo message="Executing drush ads-configure for all the ads modules..." level="info" />

    <if>
      <isset property="pure"/>
      <else>
        <log message="Enabling ads_setup module" indent="1" level="verbose" />
          <exec command="${project.drush.cmd} en ads_setup" dir="${project.dir.src}" LogOutput="true" />

        <log message="Checking modules' dependencies for: shs, pathauto, token" indent="1" level="verbose" />
          <exec command="echo n | drush dis shs pathauto token | grep -oP 'will be disabled: \K[a-z_ ,]+' | tail -n 1 | tr -d ',' | tr -d '.'" dir="${project.dir.src}" LogOutput="false" outputProperty="output.modules.disabled" />

        <log message="Dependencies are: ${output.modules.disabled}. If something gone wrong, please" indent="1" level="verbose" />
        <log message="re-enable those modules before running phing again:" indent="1" level="verbose" />
        <log message="drush -y en ${output.modules.disabled}" indent="2" level="verbose" />
        <log message="" indent="2" level="verbose" />

        <log message="Disabling modules: shs, pathauto, token" indent="1" level="verbose" />
          <exec command="${project.drush.cmd} dis shs pathauto token" dir="${project.dir.src}" LogOutput="true" />
      </else>
    </if>

    <property file="${project.dir.dist}/build.properties" />

    <log message="Configuring modules..." indent="1" level="info" />

      <if>
        <isset property="force"/>
        <then><property name="forced" value="1" override="true" /></then>
        <else><property name="forced" value="0" override="true" /></else>
      </if>

      <exec command="${project.drush.cmd} ads-configure &quot;${project.dir.dist}/build.properties&quot; --force=${forced}" dir="${project.dir.src}" checkreturn="true" LogOutput="true" />

    <if>
      <isset property="pure"/>
      <else>
        <log message="Re-enabling modules: ${output.modules.disabled}" indent="1" level="verbose" />
          <exec command="${project.drush.cmd} en ${output.modules.disabled}" dir="${project.dir.src}" LogOutput="true" />
      </else>
    </if>

  </target>

  <adhoc-task name="parse-properties-file-configure"><![CDATA[

    class ParsePropertiesFileConfigureTask extends Task {

      public function main () {
        $properties = array();

        foreach ($this->getProject()->getProperties() as $name => $value) {
          if (substr($name, 0, 25) === 'project.drupal.configure.') {

            $nest = &$properties;
            $keys = explode('.', substr($name, 25));

            while ($key = array_shift($keys)) {
              $nest = &$nest[$key];
            }

            if ($key !== NULL) {
              $nest[$key] = $value;
            }
            else {
              $nest = $value;
            }
          }
        }

        $temp_path = sys_get_temp_dir() . '/ads-configure.properties.json';

        file_put_contents($temp_path, json_encode($properties));

        $this->getProject()->setProperty('parsed_path', $temp_path);

      } //end main

    } //end ExecuteImportFileTargetTask

  ]]></adhoc-task>

</project>
